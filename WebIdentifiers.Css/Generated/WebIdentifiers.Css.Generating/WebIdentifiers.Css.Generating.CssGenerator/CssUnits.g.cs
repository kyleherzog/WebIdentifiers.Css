// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css;

/// <summary>
/// Provides methods for generating CSS values using predefined CSS units of measure.
/// </summary>
public static partial class CssUnits
{
	/// <summary>
	/// Generates a string with the given value suffixed with the <c>deg</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Deg(object? value) => GetUnitValue(value, "deg");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>grad</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Grad(object? value) => GetUnitValue(value, "grad");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>rad</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Rad(object? value) => GetUnitValue(value, "rad");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>turn</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Turn(object? value) => GetUnitValue(value, "turn");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>Hz</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Hz(object? value) => GetUnitValue(value, "Hz");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>kHz</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string KHz(object? value) => GetUnitValue(value, "kHz");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>cap</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Cap(object? value) => GetUnitValue(value, "cap");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>ch</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Ch(object? value) => GetUnitValue(value, "ch");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>cm</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Cm(object? value) => GetUnitValue(value, "cm");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>dvb</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Dvb(object? value) => GetUnitValue(value, "dvb");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>dvh</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Dvh(object? value) => GetUnitValue(value, "dvh");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>dvi</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Dvi(object? value) => GetUnitValue(value, "dvi");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>dvmax</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Dvmax(object? value) => GetUnitValue(value, "dvmax");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>dvmin</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Dvmin(object? value) => GetUnitValue(value, "dvmin");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>dvw</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Dvw(object? value) => GetUnitValue(value, "dvw");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>em</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Em(object? value) => GetUnitValue(value, "em");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>ex</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Ex(object? value) => GetUnitValue(value, "ex");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>ic</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Ic(object? value) => GetUnitValue(value, "ic");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>in</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string In(object? value) => GetUnitValue(value, "in");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>lh</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Lh(object? value) => GetUnitValue(value, "lh");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>lvb</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Lvb(object? value) => GetUnitValue(value, "lvb");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>lvh</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Lvh(object? value) => GetUnitValue(value, "lvh");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>lvi</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Lvi(object? value) => GetUnitValue(value, "lvi");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>lvmax</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Lvmax(object? value) => GetUnitValue(value, "lvmax");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>lvmin</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Lvmin(object? value) => GetUnitValue(value, "lvmin");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>lvw</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Lvw(object? value) => GetUnitValue(value, "lvw");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>mm</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Mm(object? value) => GetUnitValue(value, "mm");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>pc</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Pc(object? value) => GetUnitValue(value, "pc");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>pt</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Pt(object? value) => GetUnitValue(value, "pt");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>px</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Px(object? value) => GetUnitValue(value, "px");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>Q</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Q(object? value) => GetUnitValue(value, "Q");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>rcap</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Rcap(object? value) => GetUnitValue(value, "rcap");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>rch</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Rch(object? value) => GetUnitValue(value, "rch");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>rem</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Rem(object? value) => GetUnitValue(value, "rem");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>rex</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Rex(object? value) => GetUnitValue(value, "rex");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>ric</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Ric(object? value) => GetUnitValue(value, "ric");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>rlh</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Rlh(object? value) => GetUnitValue(value, "rlh");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>svb</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Svb(object? value) => GetUnitValue(value, "svb");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>svh</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Svh(object? value) => GetUnitValue(value, "svh");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>svi</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Svi(object? value) => GetUnitValue(value, "svi");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>svmax</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Svmax(object? value) => GetUnitValue(value, "svmax");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>svmin</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Svmin(object? value) => GetUnitValue(value, "svmin");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>svw</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Svw(object? value) => GetUnitValue(value, "svw");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>vb</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Vb(object? value) => GetUnitValue(value, "vb");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>vh</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Vh(object? value) => GetUnitValue(value, "vh");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>vi</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Vi(object? value) => GetUnitValue(value, "vi");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>vmax</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Vmax(object? value) => GetUnitValue(value, "vmax");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>vmin</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Vmin(object? value) => GetUnitValue(value, "vmin");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>vw</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Vw(object? value) => GetUnitValue(value, "vw");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>dpcm</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Dpcm(object? value) => GetUnitValue(value, "dpcm");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>dpi</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Dpi(object? value) => GetUnitValue(value, "dpi");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>dppx</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Dppx(object? value) => GetUnitValue(value, "dppx");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>x</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string X(object? value) => GetUnitValue(value, "x");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>ms</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string Ms(object? value) => GetUnitValue(value, "ms");

	/// <summary>
	/// Generates a string with the given value suffixed with the <c>s</c> identifier.
	/// </summary>
	/// <param name="value">The value to be suffixed with the CSS unit of measure.</param>
	/// <returns>The value formatted with the CSS unit of measure.</returns>
	public static string S(object? value) => GetUnitValue(value, "s");

	private static string GetUnitValue(object? value, string unitOfMeasure)
	{
		if (value is null)
		{
			return string.Empty;
		}

		var stringValue = value.ToString();
		if (stringValue == "0")
		{
			return "0";
		}

		return $"{stringValue}{unitOfMeasure}";
	}

}