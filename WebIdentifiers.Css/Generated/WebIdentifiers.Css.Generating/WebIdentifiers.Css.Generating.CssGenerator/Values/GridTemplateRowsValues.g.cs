// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Values;

/// <summary>
/// Provides values which are valid for the <c>grid-template-rows</c> property.
/// </summary>
public partial class GridTemplateRowsValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>auto</c> property. As a maximum: represents the largest max-content contribution of the grid items occupying the grid track; however, unlike max-content, allows expansion of the track by the align-content and justify-content properties. As a minimum: represents the largest minimum size (specified by min-width/min-height) of the grid items occupying the grid track. (This initially is often, but not always, equal to a min-content minimum—see § 6.6 Automatic Minimum Size of Grid Items.) When appearing outside a minmax() notation: equivalent to minmax(auto, auto), representing the range between the minimum and maximum described above. (This behaves similar to minmax(min-content, max-content) in the most basic cases, but with extra abilities.)
	/// </summary>
	public string Auto => CssValues.Auto;

	/// <summary>
	/// Gets the name of the <c>max-content</c> property. Represents the largest max-content contribution of the grid items occupying the grid track.
	/// </summary>
	public string MaxContent => CssValues.MaxContent;

	/// <summary>
	/// Gets the name of the <c>min-content</c> property. Represents the largest min-content contribution of the grid items occupying the grid track.
	/// </summary>
	public string MinContent => CssValues.MinContent;

	/// <summary>
	/// Gets the name of the <c>none</c> property. Indicates that no explicit grid tracks are created by this property (though explicit grid tracks could still be created by grid-template-areas).
	/// </summary>
	public string None => CssValues.None;

	/// <summary>
	/// Gets the name of the <c>subgrid</c> property. 
	/// </summary>
	public string Subgrid => CssValues.Subgrid;

}