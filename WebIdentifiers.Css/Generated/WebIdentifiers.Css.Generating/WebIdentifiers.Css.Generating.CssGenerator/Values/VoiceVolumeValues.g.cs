// <autogenerated/>
namespace WebIdentifiers.Css.Values;

public partial class VoiceVolumeValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>loud</c> property. This sequence of keywords corresponds to monotonically non-decreasing volume levels, mapped to implementation-dependent values that meet the listener’s requirements with regards to perceived loudness. These audio levels are typically provided via a preference mechanism that allow users to calibrate sound options according to their auditory environment. The keyword x-soft maps to the user’s minimum audible volume level, x-loud maps to the user’s maximum tolerable volume level, medium maps to the user’s preferred volume level, soft and loud map to intermediary values.
	/// </summary>
	public string Loud => CssValues.Loud;

	/// <summary>
	/// Gets the name of the <c>medium</c> property. This sequence of keywords corresponds to monotonically non-decreasing volume levels, mapped to implementation-dependent values that meet the listener’s requirements with regards to perceived loudness. These audio levels are typically provided via a preference mechanism that allow users to calibrate sound options according to their auditory environment. The keyword x-soft maps to the user’s minimum audible volume level, x-loud maps to the user’s maximum tolerable volume level, medium maps to the user’s preferred volume level, soft and loud map to intermediary values.
	/// </summary>
	public string Medium => CssValues.Medium;

	/// <summary>
	/// Gets the name of the <c>silent</c> property. Specifies that no sound is generated (the text is read "silently").
	/// </summary>
	public string Silent => CssValues.Silent;

	/// <summary>
	/// Gets the name of the <c>soft</c> property. This sequence of keywords corresponds to monotonically non-decreasing volume levels, mapped to implementation-dependent values that meet the listener’s requirements with regards to perceived loudness. These audio levels are typically provided via a preference mechanism that allow users to calibrate sound options according to their auditory environment. The keyword x-soft maps to the user’s minimum audible volume level, x-loud maps to the user’s maximum tolerable volume level, medium maps to the user’s preferred volume level, soft and loud map to intermediary values.
	/// </summary>
	public string Soft => CssValues.Soft;

	/// <summary>
	/// Gets the name of the <c>x-loud</c> property. This sequence of keywords corresponds to monotonically non-decreasing volume levels, mapped to implementation-dependent values that meet the listener’s requirements with regards to perceived loudness. These audio levels are typically provided via a preference mechanism that allow users to calibrate sound options according to their auditory environment. The keyword x-soft maps to the user’s minimum audible volume level, x-loud maps to the user’s maximum tolerable volume level, medium maps to the user’s preferred volume level, soft and loud map to intermediary values.
	/// </summary>
	public string XLoud => CssValues.XLoud;

	/// <summary>
	/// Gets the name of the <c>x-soft</c> property. This sequence of keywords corresponds to monotonically non-decreasing volume levels, mapped to implementation-dependent values that meet the listener’s requirements with regards to perceived loudness. These audio levels are typically provided via a preference mechanism that allow users to calibrate sound options according to their auditory environment. The keyword x-soft maps to the user’s minimum audible volume level, x-loud maps to the user’s maximum tolerable volume level, medium maps to the user’s preferred volume level, soft and loud map to intermediary values.
	/// </summary>
	public string XSoft => CssValues.XSoft;

}