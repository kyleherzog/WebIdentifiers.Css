// <autogenerated/>
namespace WebIdentifiers.Css.Values;

public partial class FontSizeAdjustValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>cap-height</c> property. Normalize the cap-height of the fonts, using the cap-height by the font size.
	/// </summary>
	public string CapHeight => CssValues.CapHeight;

	/// <summary>
	/// Gets the name of the <c>ch-width</c> property. Normalize the horizontal narrow pitch of the fonts, using the advance width of “0” (ZERO, U+0030) divided by the font size.
	/// </summary>
	public string ChWidth => CssValues.ChWidth;

	/// <summary>
	/// Gets the name of the <c>ex-height</c> property. Normalize the aspect value of the fonts, using the x-height divided by the font size.
	/// </summary>
	public string ExHeight => CssValues.ExHeight;

	/// <summary>
	/// Gets the name of the <c>from-font</c> property. Computes to the <number> corresponding to the specified metric of the first available font. w3c/csswg-drafts/6384[css-fonts-5] font-size-adjust with missing metrics
	/// </summary>
	public string FromFont => CssValues.FromFont;

	/// <summary>
	/// Gets the name of the <c>ic-height</c> property. Normalize the vertical wide pitch of the font, using the advance height of “水” (CJK water ideograph, U+6C34) divided by the font size.
	/// </summary>
	public string IcHeight => CssValues.IcHeight;

	/// <summary>
	/// Gets the name of the <c>ic-width</c> property. Normalize the horizontal wide pitch of the font, using the advance width of “水” (CJK water ideograph, U+6C34) divided by the font size.
	/// </summary>
	public string IcWidth => CssValues.IcWidth;

	/// <summary>
	/// Gets the name of the <c>none</c> property. No special font-size adjustment is applied.
	/// </summary>
	public string None => CssValues.None;

}