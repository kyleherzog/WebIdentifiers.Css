// <autogenerated/>
namespace WebIdentifiers.Css.Values;

public partial class RestBeforeValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>medium</c> property. Expresses the rest by the strength of the prosodic break in speech output. The exact time is implementation-dependent. The values indicate monotonically non-decreasing (conceptually increasing) break strength between elements.
	/// </summary>
	public string Medium => CssValues.Medium;

	/// <summary>
	/// Gets the name of the <c>none</c> property. Equivalent to 0ms. (No prosodic break is produced by the speech processor.)
	/// </summary>
	public string None => CssValues.None;

	/// <summary>
	/// Gets the name of the <c>strong</c> property. Expresses the rest by the strength of the prosodic break in speech output. The exact time is implementation-dependent. The values indicate monotonically non-decreasing (conceptually increasing) break strength between elements.
	/// </summary>
	public string Strong => CssValues.Strong;

	/// <summary>
	/// Gets the name of the <c>weak</c> property. Expresses the rest by the strength of the prosodic break in speech output. The exact time is implementation-dependent. The values indicate monotonically non-decreasing (conceptually increasing) break strength between elements.
	/// </summary>
	public string Weak => CssValues.Weak;

	/// <summary>
	/// Gets the name of the <c>x-strong</c> property. Expresses the rest by the strength of the prosodic break in speech output. The exact time is implementation-dependent. The values indicate monotonically non-decreasing (conceptually increasing) break strength between elements.
	/// </summary>
	public string XStrong => CssValues.XStrong;

	/// <summary>
	/// Gets the name of the <c>x-weak</c> property. Expresses the rest by the strength of the prosodic break in speech output. The exact time is implementation-dependent. The values indicate monotonically non-decreasing (conceptually increasing) break strength between elements.
	/// </summary>
	public string XWeak => CssValues.XWeak;

}