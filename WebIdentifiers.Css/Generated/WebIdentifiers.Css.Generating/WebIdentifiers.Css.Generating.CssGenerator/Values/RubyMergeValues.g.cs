// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Values;

/// <summary>
/// Provides values which are valid for the <c>ruby-merge</c> property.
/// </summary>
public partial class RubyMergeValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>auto</c> property. The user agent may use any algorithm to determine how each ruby annotation box is rendered to its corresponding base box, with the intention that if all annotations fit over their respective bases, the result is identical to separate, but if some annotations are wider than their bases the space is shared in some way to avoid imposing space between bases. ruby-merge: auto with center alignment
	/// </summary>
	public string Auto => CssValues.Auto;

	/// <summary>
	/// Gets the name of the <c>merge</c> property. All ruby annotation boxes within the same ruby segment on the same line are concatenated as inline boxes within their annotation container, and laid out in a single anonymous ruby annotation box spanning all their associated ruby base boxes. When laid out on a single line, this style renders similar to “group ruby” in [JLREQ]. However, when it breaks across lines, ruby annotations are kept together with their respective ruby bases. ruby-merge: merge with center alignment The following two lines render the same if both characters fit on one line: &lt;p&gt;&lt;ruby&gt;無常&lt;rt&gt;むじょう&lt;/ruby&gt; &lt;p&gt;&lt;ruby style=&quot;ruby-merge:merge&quot;&gt;&lt;rb&gt;無&lt;rb&gt;常&lt;rt&gt;む&lt;rt&gt;じょう&lt;/ruby&gt; However, the second one renders the same as ruby-position: separate when the two bases are split across lines.
	/// </summary>
	public string Merge => CssValues.Merge;

	/// <summary>
	/// Gets the name of the <c>separate</c> property. Each ruby annotation box is rendered within the same column(s) as its corresponding base box(es), i.e. without overlapping adjacent bases on either side. This style is called “mono ruby” in [JLREQ]. ruby-merge: separate with center alignment For example, the following two lines render the same: &lt;p&gt;&lt;ruby&gt;無&lt;rt&gt;む&lt;/ruby&gt;&lt;ruby&gt;常&lt;rt&gt;じょう&lt;/ruby&gt; &lt;p&gt;&lt;ruby style=&quot;ruby-merge:separate&quot;&gt;&lt;rb&gt;無&lt;rb&gt;常&lt;rt&gt;む&lt;rt&gt;じょう&lt;/ruby&gt;
	/// </summary>
	public string Separate => CssValues.Separate;

}