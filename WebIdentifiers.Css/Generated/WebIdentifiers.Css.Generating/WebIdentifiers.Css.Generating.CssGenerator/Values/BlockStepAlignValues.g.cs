// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Values;

/// <summary>
/// Provides values which are valid for the <c>block-step-align</c> property.
/// </summary>
public partial class BlockStepAlignValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>auto</c> property. If block-step-insert is margin: if align-self is start, end, or center, treat as that value, otherwise treat as center.
	/// </summary>
	public string Auto => CssValues.Auto;

	/// <summary>
	/// Gets the name of the <c>center</c> property. Any extra space resulting from a block-step-size-induced adjustment is split, and applied half on either side of the box.
	/// </summary>
	public string Center => CssValues.Center;

	/// <summary>
	/// Gets the name of the <c>down</c> property. The outer size of the box is decreased (negative space is inserted) to fulfill the block-step-size constraint.
	/// </summary>
	public string Down => CssValues.Down;

	/// <summary>
	/// Gets the name of the <c>end</c> property. Any extra space resulting from a block-step-size-induced adjustment is inserted on the start side of the box.
	/// </summary>
	public string End => CssValues.End;

	/// <summary>
	/// Gets the name of the <c>nearest</c> property. The outer size of the box is either increased (as for up) or decreased (as for down—whichever results in the smallest absolute change—to fulfill the block-step-size constraint. If both options would result in the same amount of change, the size is increased.
	/// </summary>
	public string Nearest => CssValues.Nearest;

	/// <summary>
	/// Gets the name of the <c>start</c> property. Any extra space resulting from a block-step-size-induced adjustment is inserted on the end side of the box.
	/// </summary>
	public string Start => CssValues.Start;

	/// <summary>
	/// Gets the name of the <c>up</c> property. The outer size of the box is increased (positive space is inserted) to fulfill the block-step-size constraint.
	/// </summary>
	public string Up => CssValues.Up;

}