// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Values;

/// <summary>
/// Provides values which are valid for the <c>caret-shape</c> property.
/// </summary>
public partial class CaretShapeValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>auto</c> property. The UA determines the shape of the caret. It should match platform conventions, and may be adjusted based on context. For example, if a UA switches between insert mode and overtype mode when the user presses the insert key on their keyboard, it may show a bar caret in insert mode, and a block caret in overtype mode.
	/// </summary>
	public string Auto => CssValues.Auto;

	/// <summary>
	/// Gets the name of the <c>bar</c> property. The UA must render the text insertion caret as a thin bar placed at the insertion point. This means it is between, before, or after characters, not over them. It should be perpendicular to the inline progression direction, although UAs may render it slanted when inserting italic or oblique text.
	/// </summary>
	public string Bar => CssValues.Bar;

	/// <summary>
	/// Gets the name of the <c>block</c> property. The UA must render the text insertion caret as a rectangle overlapping the next visible character following the insertion point. If there is no visible character after the insertion point, the UA must render the caret after the last visible character. UAs may render it as a slanted rectangle when inserting italic or oblique text.
	/// </summary>
	public string Block => CssValues.Block;

	/// <summary>
	/// Gets the name of the <c>underscore</c> property. The UA must render the text insertion caret as a thin line under (as defined in [CSS-WRITING-MODES-3] the next visible character following the insertion point. If there is no visible character after the insertion point, the UA must render the caret after the last visible character.
	/// </summary>
	public string Underscore => CssValues.Underscore;

}