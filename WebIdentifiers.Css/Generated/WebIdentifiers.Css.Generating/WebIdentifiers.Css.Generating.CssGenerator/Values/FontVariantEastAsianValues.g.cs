// <autogenerated/>
namespace WebIdentifiers.Css.Values;

public partial class FontVariantEastAsianValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>full-width</c> property. Enables rendering of full-width variants (OpenType feature: fwid).
	/// </summary>
	public string FullWidth => CssValues.FullWidth;

	/// <summary>
	/// Gets the name of the <c>jis04</c> property. Enables rendering of JIS2004 forms (OpenType feature: jp04). The various JIS variants reflect the glyph forms defined in different Japanese national standards. Fonts generally include glyphs defined by the most recent national standard, but it’s sometimes necessary to use older variants, to match signage for example.
	/// </summary>
	public string Jis04 => CssValues.Jis04;

	/// <summary>
	/// Gets the name of the <c>jis78</c> property. Enables rendering of JIS78 forms (OpenType feature: jp78).
	/// </summary>
	public string Jis78 => CssValues.Jis78;

	/// <summary>
	/// Gets the name of the <c>jis83</c> property. Enables rendering of JIS83 forms (OpenType feature: jp83).
	/// </summary>
	public string Jis83 => CssValues.Jis83;

	/// <summary>
	/// Gets the name of the <c>jis90</c> property. Enables rendering of JIS90 forms (OpenType feature: jp90).
	/// </summary>
	public string Jis90 => CssValues.Jis90;

	/// <summary>
	/// Gets the name of the <c>normal</c> property. None of the features listed below are enabled.
	/// </summary>
	public string Normal => CssValues.Normal;

	/// <summary>
	/// Gets the name of the <c>proportional-width</c> property. Enables rendering of proportionally-spaced variants (OpenType feature: pwid).
	/// </summary>
	public string ProportionalWidth => CssValues.ProportionalWidth;

	/// <summary>
	/// Gets the name of the <c>ruby</c> property. Enables display of ruby variant glyphs (OpenType feature: ruby). Since ruby text is generally smaller than the associated body text, font designers can design special glyphs for use with ruby that are more readable than scaled down versions of the default glyphs. Only glyph selection is affected, there is no associated font scaling or other change that affects line layout. The red ruby text below is shown with default glyphs (top) and with ruby variant glyphs (bottom). Note the slight difference in stroke thickness.
	/// </summary>
	public string Ruby => CssValues.Ruby;

	/// <summary>
	/// Gets the name of the <c>simplified</c> property. Enables rendering of simplified forms (OpenType feature: smpl).
	/// </summary>
	public string Simplified => CssValues.Simplified;

	/// <summary>
	/// Gets the name of the <c>traditional</c> property. Enables rendering of traditional forms (OpenType feature: trad).
	/// </summary>
	public string Traditional => CssValues.Traditional;

}