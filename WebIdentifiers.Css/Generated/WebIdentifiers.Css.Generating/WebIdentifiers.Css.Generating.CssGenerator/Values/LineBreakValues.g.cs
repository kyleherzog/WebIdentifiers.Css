// <autogenerated/>
namespace WebIdentifiers.Css.Values;

public partial class LineBreakValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>anywhere</c> property. There is a soft wrap opportunity around every typographic character unit, including around any punctuation character or preserved white spaces, or in the middle of words, disregarding any prohibition against line breaks, even those introduced by characters with the GL, WJ, or ZWJ line breaking classes or mandated by the word-break property. [UAX14] The different wrapping opportunities must not be prioritized. Hyphenation is not applied.
	/// </summary>
	public string Anywhere => CssValues.Anywhere;

	/// <summary>
	/// Gets the name of the <c>auto</c> property. The UA determines the set of line-breaking restrictions to use, and it may vary the restrictions based on the length of the line; e.g., use a less restrictive set of line-break rules for short lines.
	/// </summary>
	public string Auto => CssValues.Auto;

	/// <summary>
	/// Gets the name of the <c>loose</c> property. Breaks text using the least restrictive set of line-breaking rules. Typically used for short lines, such as in newspapers.
	/// </summary>
	public string Loose => CssValues.Loose;

	/// <summary>
	/// Gets the name of the <c>normal</c> property. Breaks text using the most common set of line-breaking rules.
	/// </summary>
	public string Normal => CssValues.Normal;

	/// <summary>
	/// Gets the name of the <c>strict</c> property. Breaks text using the most stringent set of line-breaking rules.
	/// </summary>
	public string Strict => CssValues.Strict;

}