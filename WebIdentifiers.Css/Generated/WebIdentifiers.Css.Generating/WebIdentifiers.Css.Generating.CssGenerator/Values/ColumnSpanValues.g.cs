// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Values;

/// <summary>
/// Provides values which are valid for the <c>column-span</c> property.
/// </summary>
public partial class ColumnSpanValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>all</c> property. Add final content from previous level
	/// </summary>
	public string All => CssValues.All;

	/// <summary>
	/// Gets the name of the <c>auto</c> property. The number of columns spanned by the element depends on its min-content outer size in the inline direction of the multi-column container. If it is smaller than the used value of column-width, this is the same as if column-span: none had been specified. Otherwise, the number of columns spanned is the smallest positive integer n for which n × column-width + (n - 1) × column-gap is larger than the min-content outer size. If this would be larger than the number of columns, the number of columns spanned will be the same as if column-span: all had been specified. If column-span: 1 does not do the same as column-span: none, should this behave as column-span: 1 or as column-span: none when the element is small enough?
	/// </summary>
	public string Auto => CssValues.Auto;

	/// <summary>
	/// Gets the name of the <c>none</c> property. Add final content from previous level
	/// </summary>
	public string None => CssValues.None;

}