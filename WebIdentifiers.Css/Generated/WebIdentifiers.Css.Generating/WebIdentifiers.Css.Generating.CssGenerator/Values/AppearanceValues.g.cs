// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Values;

/// <summary>
/// Provides values which are valid for the <c>appearance</c> property.
/// </summary>
public partial class AppearanceValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>auto</c> property. Elements representing widgets should have the native appearance of that widget, if the properties that disable native appearance for widgets are not in effect. See § 7.2.1 Properties Disabling Native Appearance. The host language is responsible for defining which elements represent which widgets. Elements other than widgets must be rendered as for none.
	/// </summary>
	public string Auto => CssValues.Auto;

	/// <summary>
	/// Gets the name of the <c>button</c> property. 
	/// </summary>
	public string Button => CssValues.Button;

	/// <summary>
	/// Gets the name of the <c>checkbox</c> property. 
	/// </summary>
	public string Checkbox => CssValues.Checkbox;

	/// <summary>
	/// Gets the name of the <c>listbox</c> property. 
	/// </summary>
	public string Listbox => CssValues.Listbox;

	/// <summary>
	/// Gets the name of the <c>menulist</c> property. 
	/// </summary>
	public string Menulist => CssValues.Menulist;

	/// <summary>
	/// Gets the name of the <c>menulist-button</c> property. 
	/// </summary>
	public string MenulistButton => CssValues.MenulistButton;

	/// <summary>
	/// Gets the name of the <c>meter</c> property. 
	/// </summary>
	public string Meter => CssValues.Meter;

	/// <summary>
	/// Gets the name of the <c>none</c> property. The element is rendered following the usual rules of CSS. Replaced elements other than widgets are not affected by this and remain replaced elements. Widgets must not have their native appearance, and instead must have their primitive appearance. See § 7.2.2 Effects of appearance on Decorative Aspects of Elements and § 7.2.3 Effects of appearance on Semantic Aspects of Elements for details.
	/// </summary>
	public string None => CssValues.None;

	/// <summary>
	/// Gets the name of the <c>progress-bar</c> property. 
	/// </summary>
	public string ProgressBar => CssValues.ProgressBar;

	/// <summary>
	/// Gets the name of the <c>radio</c> property. 
	/// </summary>
	public string Radio => CssValues.Radio;

	/// <summary>
	/// Gets the name of the <c>searchfield</c> property. 
	/// </summary>
	public string Searchfield => CssValues.Searchfield;

	/// <summary>
	/// Gets the name of the <c>textarea</c> property. 
	/// </summary>
	public string Textarea => CssValues.Textarea;

	/// <summary>
	/// Gets the name of the <c>textfield</c> property. 
	/// </summary>
	public string Textfield => CssValues.Textfield;

}