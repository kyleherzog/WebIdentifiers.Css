// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Values;

/// <summary>
/// Provides values which are valid for the <c>continue</c> property.
/// </summary>
public partial class ContinueValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>auto</c> property. If the box has more content than can fit, the excess content is handled according to the usual rules.
	/// </summary>
	public string Auto => CssValues.Auto;

	/// <summary>
	/// Gets the name of the <c>discard</c> property. The box becomes a fragmentation container that captures region breaks, if it is not already. [CSS-BREAK-3] Content after the first region break is not rendered (see below). (If the box is a multi-column container, any overflow columns are also not rendered.)
	/// </summary>
	public string Discard => CssValues.Discard;

	/// <summary>
	/// Gets the name of the <c>fragments</c> property. content that doesn’t fit causes the element to copy itself and continue laying out. See fragment overflow.
	/// </summary>
	public string Fragments => CssValues.Fragments;

	/// <summary>
	/// Gets the name of the <c>overflow</c> property. Content that doesn’t fit overflows, according to the overflow property
	/// </summary>
	public string Overflow => CssValues.Overflow;

	/// <summary>
	/// Gets the name of the <c>paginate</c> property. Content that doesn’t fit paginates. This creates a paginated view inside the element similar to the way that &apos;overflow: scroll&apos; creates a scrollable view. See paginated overflow
	/// </summary>
	public string Paginate => CssValues.Paginate;

	/// <summary>
	/// Gets the name of the <c>-webkit-discard</c> property. The -webkit-discard value behaves identically to discard, except that it only takes effect if the computed value of the display property on the parent is -webkit-box or -webkit-inline-box and the computed value of the -webkit-box-orient property on the parent is vertical.
	/// </summary>
	public string WebkitDiscard => CssValues.WebkitDiscard;

}