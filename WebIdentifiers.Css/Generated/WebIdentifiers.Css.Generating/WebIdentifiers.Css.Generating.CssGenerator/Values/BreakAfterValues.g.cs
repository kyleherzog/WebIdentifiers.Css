// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Values;

/// <summary>
/// Provides values which are valid for the <c>break-after</c> property.
/// </summary>
public partial class BreakAfterValues : PropertyValuesBase
{
	/// <summary>
	/// Gets the name of the <c>all</c> property. Always force a break before/after the principal box. This value breaks through all containing fragmentation contexts. For example, inside a multi-column container in a region in a multi-column container in paged media, it forces simultaneously a column break in the inner multi-column container, a region break, a column break in the outer multi-column container, and a page break. It’s unclear if this value is needed.
	/// </summary>
	public string All => CssValues.All;

	/// <summary>
	/// Gets the name of the <c>always</c> property. Always force a break before/after the principal box. The type of this break is that of the immediately-containing fragmentation context. For example, in a multi-column container forces a column break; in paged media not inside a multi-column container, forces a page break.
	/// </summary>
	public string Always => CssValues.Always;

	/// <summary>
	/// Gets the name of the <c>auto</c> property. Neither force nor forbid a break before/after the principal box.
	/// </summary>
	public string Auto => CssValues.Auto;

	/// <summary>
	/// Gets the name of the <c>avoid</c> property. Avoid a break before/after the principal box.
	/// </summary>
	public string Avoid => CssValues.Avoid;

	/// <summary>
	/// Gets the name of the <c>avoid-column</c> property. Avoid a column break before/after the principal box.
	/// </summary>
	public string AvoidColumn => CssValues.AvoidColumn;

	/// <summary>
	/// Gets the name of the <c>avoid-page</c> property. Avoid a page break before/after the principal box.
	/// </summary>
	public string AvoidPage => CssValues.AvoidPage;

	/// <summary>
	/// Gets the name of the <c>avoid-region</c> property. Avoid a region break before/after the principal box.
	/// </summary>
	public string AvoidRegion => CssValues.AvoidRegion;

	/// <summary>
	/// Gets the name of the <c>column</c> property. Always force a column break before/after the principal box.
	/// </summary>
	public string Column => CssValues.Column;

	/// <summary>
	/// Gets the name of the <c>left</c> property. Force one or two page breaks before/after the principal box so that the next page is formatted as a left page.
	/// </summary>
	public string Left => CssValues.Left;

	/// <summary>
	/// Gets the name of the <c>page</c> property. Always force a page break before/after the principal box.
	/// </summary>
	public string Page => CssValues.Page;

	/// <summary>
	/// Gets the name of the <c>recto</c> property. Force one or two page breaks before/after the principal box so that the next page is formatted as either a left page or a right page, whichever is second (according to the page progression) in a page spread.
	/// </summary>
	public string Recto => CssValues.Recto;

	/// <summary>
	/// Gets the name of the <c>region</c> property. Always force a region break before/after the principal box.
	/// </summary>
	public string Region => CssValues.Region;

	/// <summary>
	/// Gets the name of the <c>right</c> property. Force one or two page breaks before/after the principal box so that the next page is formatted as a right page.
	/// </summary>
	public string Right => CssValues.Right;

	/// <summary>
	/// Gets the name of the <c>verso</c> property. Force one or two page breaks before/after the principal box so that the next page is formatted as either a left page or a right page, whichever is first (according to the page progression) in a page spread.
	/// </summary>
	public string Verso => CssValues.Verso;

}