// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the StrokeLinejoin property.
/// </summary>
public partial class StrokeLinejoinProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a stroke-linejoin CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public StrokeLinejoinProperty(string? value = null)
		: base(CssPropertyNames.StrokeLinejoin, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>arcs</c>. An arcs corner is used to join path segments. The arcs shape is formed by extending the outer edges of the stroke at the join point with arcs that have the same curvature as the outer edges at the join point.
	/// </summary>
	public StrokeLinejoinProperty SetToArcs()
	{
		Value = CssValues.Arcs;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>bevel</c>. The corner is cropped at the stroke-miterlimit by the perpendicular to its diagonal.
	/// </summary>
	public StrokeLinejoinProperty SetToBevel()
	{
		Value = CssValues.Bevel;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>crop</c>. The stroke extends the minimal amount past the corner necessary to form a convex corner. This acts identically to miter, but forces stroke-miterlimit to behave as if it had its minimum value of 1.
	/// </summary>
	public StrokeLinejoinProperty SetToCrop()
	{
		Value = CssValues.Crop;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>fallback</c>. When the stroke-miterlimit is exceeded, this behaves as if crop bevel were specified. Can we just remove fallback? It’s a stupid value, useful only because we didn’t have the clip-at-miterlimit behavior in SVG1. Question is if people are mostly just *accidentally* getting the bevel behavior right now, and would be okay with their joins extending up to the miterlimit and only getting the excess corners clipped, or if they actually wanted the discontinuous behavior currently specified. The breakpoint is between 29 and 30 degrees.
	/// </summary>
	public StrokeLinejoinProperty SetToFallback()
	{
		Value = CssValues.Fallback;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>miter</c>. A sharp corner is used to join path segments. The corner is formed by extending the outer edges of the stroke at the tangents of the path segments until they intersect.
	/// </summary>
	public StrokeLinejoinProperty SetToMiter()
	{
		Value = CssValues.Miter;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>round</c>. The corner is cropped as for bevel, and a filled arc tangent to the truncated stroke edges is appended to round the corner.
	/// </summary>
	public StrokeLinejoinProperty SetToRound()
	{
		Value = CssValues.Round;
		return this;
	}


}