// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the LineBreak property.
/// </summary>
public partial class LineBreakProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a line-break CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public LineBreakProperty(string? value = null)
		: base(CssPropertyNames.LineBreak, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>anywhere</c>. There is a soft wrap opportunity around every typographic character unit, including around any punctuation character or preserved white spaces, or in the middle of words, disregarding any prohibition against line breaks, even those introduced by characters with the GL, WJ, or ZWJ line breaking classes or mandated by the word-break property. [UAX14] The different wrapping opportunities must not be prioritized. Hyphenation is not applied.
	/// </summary>
	public LineBreakProperty SetToAnywhere()
	{
		Value = CssValues.Anywhere;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>auto</c>. The UA determines the set of line-breaking restrictions to use, and it may vary the restrictions based on the length of the line; e.g., use a less restrictive set of line-break rules for short lines.
	/// </summary>
	public LineBreakProperty SetToAuto()
	{
		Value = CssValues.Auto;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>loose</c>. Breaks text using the least restrictive set of line-breaking rules. Typically used for short lines, such as in newspapers.
	/// </summary>
	public LineBreakProperty SetToLoose()
	{
		Value = CssValues.Loose;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>normal</c>. Breaks text using the most common set of line-breaking rules.
	/// </summary>
	public LineBreakProperty SetToNormal()
	{
		Value = CssValues.Normal;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>strict</c>. Breaks text using the most stringent set of line-breaking rules.
	/// </summary>
	public LineBreakProperty SetToStrict()
	{
		Value = CssValues.Strict;
		return this;
	}


}