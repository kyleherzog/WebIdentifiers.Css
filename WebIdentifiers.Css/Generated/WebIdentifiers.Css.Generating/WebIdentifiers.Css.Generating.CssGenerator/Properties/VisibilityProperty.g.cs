// <autogenerated/>
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the Visibility property.
/// </summary>
public partial class VisibilityProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a visibility CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public VisibilityProperty(string? value = null)
		: base(CssPropertyNames.Visibility, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>collapse</c>. Indicates that the box is collapsed, which can cause it to take up less space than otherwise in a formatting-context–specific way. See dynamic row and column effects in tables [CSS2] and collapsed flex items in flex layout [CSS-FLEXBOX-1]. In all other cases, however, (i.e. unless otherwise specified) this simply makes the box invisible, just like hidden.
	/// </summary>
	public VisibilityProperty SetToCollapse()
	{
		Value = CssValues.Collapse;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>hidden</c>. Any boxes generated by the element are invisible. Descendants of the element can, however, be visible if they have visibility: visible.
	/// </summary>
	public VisibilityProperty SetToHidden()
	{
		Value = CssValues.Hidden;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>visible</c>. The generated box is visible, as normal.
	/// </summary>
	public VisibilityProperty SetToVisible()
	{
		Value = CssValues.Visible;
		return this;
	}


}