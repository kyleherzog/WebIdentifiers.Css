// <autogenerated/>
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the TextDecoration property.
/// </summary>
public partial class TextDecorationProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a text-decoration CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public TextDecorationProperty(string? value = null)
		: base(CssPropertyNames.TextDecoration, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>blink</c>. Text blinks (alternates between visible and invisible). Conforming user agents may simply not blink the text. Note that not blinking the text is one technique to satisfy checkpoint 3.3 of WAI-UAAG.
	/// </summary>
	public TextDecorationProperty SetToBlink()
	{
		Value = CssValues.Blink;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>line-through</c>. Each line of text has a line through the middle.
	/// </summary>
	public TextDecorationProperty SetToLineThrough()
	{
		Value = CssValues.LineThrough;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>none</c>. Produces no text decoration.
	/// </summary>
	public TextDecorationProperty SetToNone()
	{
		Value = CssValues.None;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>overline</c>. Each line of text has a line above it.
	/// </summary>
	public TextDecorationProperty SetToOverline()
	{
		Value = CssValues.Overline;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>underline</c>. Each line of text is underlined.
	/// </summary>
	public TextDecorationProperty SetToUnderline()
	{
		Value = CssValues.Underline;
		return this;
	}


}