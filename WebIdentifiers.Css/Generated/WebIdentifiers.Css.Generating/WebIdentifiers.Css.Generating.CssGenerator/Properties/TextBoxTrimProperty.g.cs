// <autogenerated/>
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the TextBoxTrim property.
/// </summary>
public partial class TextBoxTrimProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a text-box-trim CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public TextBoxTrimProperty(string? value = null)
		: base(CssPropertyNames.TextBoxTrim, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>both</c>. Specifies the behavior of start and end simultaneously.
	/// </summary>
	public TextBoxTrimProperty SetToBoth()
	{
		Value = CssValues.Both;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>end</c>. For block containers: trim the block-end side of the last formatted line to the corresponding text-box-edge metric of its root inline box. If there is no such line, or if there is intervening non-zero padding or borders, there is no effect. For inline boxes: trims the block-end side of the box to match its content edge to the metric specified by text-box-edge (treating leading as text).
	/// </summary>
	public TextBoxTrimProperty SetToEnd()
	{
		Value = CssValues.End;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>none</c>. No special handling of the first/last line box when applied to a block container. When applied to an inline box, specifies that the over/under content edges coincide with the text-over/text-under baselines regardless of text-box-edge (which nonetheless still affects line box sizing).
	/// </summary>
	public TextBoxTrimProperty SetToNone()
	{
		Value = CssValues.None;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>start</c>. For block containers: trim the block-start side of the first formatted line to the corresponding text-box-edge metric of its root inline box. If there is no such line, or if there is intervening non-zero padding or borders, there is no effect. For inline boxes: trims the block-start side of the box to match its content edge to the metric specified by text-box-edge (treating leading as text).
	/// </summary>
	public TextBoxTrimProperty SetToStart()
	{
		Value = CssValues.Start;
		return this;
	}


}