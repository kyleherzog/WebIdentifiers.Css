// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the VoiceVolume property.
/// </summary>
public partial class VoiceVolumeProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a voice-volume CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public VoiceVolumeProperty(string? value = null)
		: base(CssPropertyNames.VoiceVolume, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>loud</c>. This sequence of keywords corresponds to monotonically non-decreasing volume levels, mapped to implementation-dependent values that meet the listener’s requirements with regards to perceived loudness. These audio levels are typically provided via a preference mechanism that allow users to calibrate sound options according to their auditory environment. The keyword x-soft maps to the user’s minimum audible volume level, x-loud maps to the user’s maximum tolerable volume level, medium maps to the user’s preferred volume level, soft and loud map to intermediary values.
	/// </summary>
	public VoiceVolumeProperty SetToLoud()
	{
		Value = CssValues.Loud;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>medium</c>. This sequence of keywords corresponds to monotonically non-decreasing volume levels, mapped to implementation-dependent values that meet the listener’s requirements with regards to perceived loudness. These audio levels are typically provided via a preference mechanism that allow users to calibrate sound options according to their auditory environment. The keyword x-soft maps to the user’s minimum audible volume level, x-loud maps to the user’s maximum tolerable volume level, medium maps to the user’s preferred volume level, soft and loud map to intermediary values.
	/// </summary>
	public VoiceVolumeProperty SetToMedium()
	{
		Value = CssValues.Medium;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>silent</c>. Specifies that no sound is generated (the text is read &quot;silently&quot;).
	/// </summary>
	public VoiceVolumeProperty SetToSilent()
	{
		Value = CssValues.Silent;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>soft</c>. This sequence of keywords corresponds to monotonically non-decreasing volume levels, mapped to implementation-dependent values that meet the listener’s requirements with regards to perceived loudness. These audio levels are typically provided via a preference mechanism that allow users to calibrate sound options according to their auditory environment. The keyword x-soft maps to the user’s minimum audible volume level, x-loud maps to the user’s maximum tolerable volume level, medium maps to the user’s preferred volume level, soft and loud map to intermediary values.
	/// </summary>
	public VoiceVolumeProperty SetToSoft()
	{
		Value = CssValues.Soft;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>x-loud</c>. This sequence of keywords corresponds to monotonically non-decreasing volume levels, mapped to implementation-dependent values that meet the listener’s requirements with regards to perceived loudness. These audio levels are typically provided via a preference mechanism that allow users to calibrate sound options according to their auditory environment. The keyword x-soft maps to the user’s minimum audible volume level, x-loud maps to the user’s maximum tolerable volume level, medium maps to the user’s preferred volume level, soft and loud map to intermediary values.
	/// </summary>
	public VoiceVolumeProperty SetToXLoud()
	{
		Value = CssValues.XLoud;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>x-soft</c>. This sequence of keywords corresponds to monotonically non-decreasing volume levels, mapped to implementation-dependent values that meet the listener’s requirements with regards to perceived loudness. These audio levels are typically provided via a preference mechanism that allow users to calibrate sound options according to their auditory environment. The keyword x-soft maps to the user’s minimum audible volume level, x-loud maps to the user’s maximum tolerable volume level, medium maps to the user’s preferred volume level, soft and loud map to intermediary values.
	/// </summary>
	public VoiceVolumeProperty SetToXSoft()
	{
		Value = CssValues.XSoft;
		return this;
	}


}