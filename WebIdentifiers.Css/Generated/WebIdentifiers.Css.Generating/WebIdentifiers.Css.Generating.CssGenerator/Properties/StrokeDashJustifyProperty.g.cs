// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the StrokeDashJustify property.
/// </summary>
public partial class StrokeDashJustifyProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a stroke-dash-justify CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public StrokeDashJustifyProperty(string? value = null)
		: base(CssPropertyNames.StrokeDashJustify, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>compress</c>. Indicates that when the dash pattern does not fit into a subpath a whole number times, the dashes or gaps (or both) will be shortened so that it does.
	/// </summary>
	public StrokeDashJustifyProperty SetToCompress()
	{
		Value = CssValues.Compress;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>dashes</c>. Indicates that when a dash pattern is to be stretched or compressed, the length of the dashes will be adjusted.
	/// </summary>
	public StrokeDashJustifyProperty SetToDashes()
	{
		Value = CssValues.Dashes;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>gaps</c>. Indicates that when a dash pattern is to be stretched or compressed, the length of the gaps will be adjusted.
	/// </summary>
	public StrokeDashJustifyProperty SetToGaps()
	{
		Value = CssValues.Gaps;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>none</c>. No adjustment of the dash pattern is made: it’s clipped at the end of the subpath with however much progress it made to that point.
	/// </summary>
	public StrokeDashJustifyProperty SetToNone()
	{
		Value = CssValues.None;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>stretch</c>. Indicates that when the dash pattern does not fit into a subpath a whole number times, the dashes or gaps (or both) will be lengthened so that it does.
	/// </summary>
	public StrokeDashJustifyProperty SetToStretch()
	{
		Value = CssValues.Stretch;
		return this;
	}


}