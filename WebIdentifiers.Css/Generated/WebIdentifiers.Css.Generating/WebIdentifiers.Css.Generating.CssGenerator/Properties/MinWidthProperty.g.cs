// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the MinWidth property.
/// </summary>
public partial class MinWidthProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a min-width CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public MinWidthProperty(string? value = null)
		: base(CssPropertyNames.MinWidth, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>auto</c>. For width/height, specifies an automatic size (automatic block size/automatic inline size). See the relevant layout module for how to calculate this. For min-width/min-height, specifies an automatic minimum size. Unless otherwise defined by the relevant layout module, however, it resolves to a used value of 0. For backwards-compatibility, the resolved value of this keyword is zero for boxes of all [CSS2] display types: block and inline boxes, inline blocks, and all the table layout boxes. It also resolves to zero when no box is generated.
	/// </summary>
	public MinWidthProperty SetToAuto()
	{
		Value = CssValues.Auto;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>contain</c>. If the box has a preferred aspect ratio, applies contain-fit sizing, attempting to fit into the box’s constraints while maintaining its preferred aspect ratio insofar as possible. See § 6.2 Contain-fit Sizing: stretching while maintaining an aspect ratio. If the box has no preferred aspect ratio, applies stretch-fit sizing.
	/// </summary>
	public MinWidthProperty SetToContain()
	{
		Value = CssValues.Contain;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>fit-content</c>. Essentially fit-content(stretch) i.e. min(max-content, max(min-content, stretch)).
	/// </summary>
	public MinWidthProperty SetToFitContent()
	{
		Value = CssValues.FitContent;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>max-content</c>. Use the max-content size in the relevant axis; for a box’s block size, unless otherwise specified, this is equivalent to its automatic size.
	/// </summary>
	public MinWidthProperty SetToMaxContent()
	{
		Value = CssValues.MaxContent;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>min-content</c>. Use the min-content size in the relevant axis; for a box’s block size, unless otherwise specified, this is equivalent to its automatic size.
	/// </summary>
	public MinWidthProperty SetToMinContent()
	{
		Value = CssValues.MinContent;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>stretch</c>. Applies stretch-fit sizing, attempting to match the size of the box’s margin box to the size of its containing block. See § 6.1 Stretch-fit Sizing: filling the containing block.
	/// </summary>
	public MinWidthProperty SetToStretch()
	{
		Value = CssValues.Stretch;
		return this;
	}


}