// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the BreakAfter property.
/// </summary>
public partial class BreakAfterProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a break-after CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public BreakAfterProperty(string? value = null)
		: base(CssPropertyNames.BreakAfter, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>all</c>. Always force a break before/after the principal box. This value breaks through all containing fragmentation contexts. For example, inside a multi-column container in a region in a multi-column container in paged media, it forces simultaneously a column break in the inner multi-column container, a region break, a column break in the outer multi-column container, and a page break. It’s unclear if this value is needed.
	/// </summary>
	public BreakAfterProperty SetToAll()
	{
		Value = CssValues.All;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>always</c>. Always force a break before/after the principal box. The type of this break is that of the immediately-containing fragmentation context. For example, in a multi-column container forces a column break; in paged media not inside a multi-column container, forces a page break.
	/// </summary>
	public BreakAfterProperty SetToAlways()
	{
		Value = CssValues.Always;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>auto</c>. Neither force nor forbid a break before/after the principal box.
	/// </summary>
	public BreakAfterProperty SetToAuto()
	{
		Value = CssValues.Auto;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>avoid</c>. Avoid a break before/after the principal box.
	/// </summary>
	public BreakAfterProperty SetToAvoid()
	{
		Value = CssValues.Avoid;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>avoid-column</c>. Avoid a column break before/after the principal box.
	/// </summary>
	public BreakAfterProperty SetToAvoidColumn()
	{
		Value = CssValues.AvoidColumn;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>avoid-page</c>. Avoid a page break before/after the principal box.
	/// </summary>
	public BreakAfterProperty SetToAvoidPage()
	{
		Value = CssValues.AvoidPage;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>avoid-region</c>. Avoid a region break before/after the principal box.
	/// </summary>
	public BreakAfterProperty SetToAvoidRegion()
	{
		Value = CssValues.AvoidRegion;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>column</c>. Always force a column break before/after the principal box.
	/// </summary>
	public BreakAfterProperty SetToColumn()
	{
		Value = CssValues.Column;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>left</c>. Force one or two page breaks before/after the principal box so that the next page is formatted as a left page.
	/// </summary>
	public BreakAfterProperty SetToLeft()
	{
		Value = CssValues.Left;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>page</c>. Always force a page break before/after the principal box.
	/// </summary>
	public BreakAfterProperty SetToPage()
	{
		Value = CssValues.Page;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>recto</c>. Force one or two page breaks before/after the principal box so that the next page is formatted as either a left page or a right page, whichever is second (according to the page progression) in a page spread.
	/// </summary>
	public BreakAfterProperty SetToRecto()
	{
		Value = CssValues.Recto;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>region</c>. Always force a region break before/after the principal box.
	/// </summary>
	public BreakAfterProperty SetToRegion()
	{
		Value = CssValues.Region;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>right</c>. Force one or two page breaks before/after the principal box so that the next page is formatted as a right page.
	/// </summary>
	public BreakAfterProperty SetToRight()
	{
		Value = CssValues.Right;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>verso</c>. Force one or two page breaks before/after the principal box so that the next page is formatted as either a left page or a right page, whichever is first (according to the page progression) in a page spread.
	/// </summary>
	public BreakAfterProperty SetToVerso()
	{
		Value = CssValues.Verso;
		return this;
	}


}