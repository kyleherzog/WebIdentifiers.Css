// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the OutlineColor property.
/// </summary>
public partial class OutlineColorProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a outline-color CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public OutlineColorProperty(string? value = null)
		: base(CssPropertyNames.OutlineColor, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>auto</c>. When outline-style is auto, outline-color: auto represents the accent color. When outline-style is not auto, outline-color: auto computes to another value (see below).
	/// </summary>
	public OutlineColorProperty SetToAuto()
	{
		Value = CssValues.Auto;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>invert</c>. the user agent is expected to perform a color inversion on the pixels on the screen. This is a common trick to ensure the focus border is visible, regardless of color background. Conformant UAs may ignore the invert value on platforms that do not support color inversion of the pixels on the screen. If the UA does not support the invert value, then it must reject that value at parse-time, and the initial value of the outline-color property is the currentColor keyword.
	/// </summary>
	public OutlineColorProperty SetToInvert()
	{
		Value = CssValues.Invert;
		return this;
	}


}