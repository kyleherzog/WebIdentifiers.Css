// <autogenerated/>
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the GridAutoFlow property.
/// </summary>
public partial class GridAutoFlowProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a grid-auto-flow CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public GridAutoFlowProperty(string? value = null)
		: base(CssPropertyNames.GridAutoFlow, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>column</c>. The auto-placement algorithm places items by filling each column in turn, adding new columns as necessary.
	/// </summary>
	public GridAutoFlowProperty SetToColumn()
	{
		Value = CssValues.Column;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>dense</c>. If specified, the auto-placement algorithm uses a “dense” packing algorithm, which attempts to fill in holes earlier in the grid if smaller items come up later. This may cause items to appear out-of-order, when doing so would fill in holes left by larger items. If omitted, a “sparse” algorithm is used, where the placement algorithm only ever moves “forward” in the grid when placing items, never backtracking to fill holes. This ensures that all of the auto-placed items appear “in order”, even if this leaves holes that could have been filled by later items.
	/// </summary>
	public GridAutoFlowProperty SetToDense()
	{
		Value = CssValues.Dense;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>row</c>. The auto-placement algorithm places items by filling each row in turn, adding new rows as necessary. If neither row nor column is provided, row is assumed.
	/// </summary>
	public GridAutoFlowProperty SetToRow()
	{
		Value = CssValues.Row;
		return this;
	}


}