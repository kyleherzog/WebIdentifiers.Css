// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the HyphenateLimitLines property.
/// </summary>
public partial class HyphenateLimitLinesProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a hyphenate-limit-lines CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public HyphenateLimitLinesProperty(string? value = null)
		: base(CssPropertyNames.HyphenateLimitLines, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>always</c>. The last full line of the element, or the last line before any column, page, or spread break inside the element should not be hyphenated.
	/// </summary>
	public HyphenateLimitLinesProperty SetToAlways()
	{
		Value = CssValues.Always;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>column</c>. The last line before any column, page, or spread break inside the element should not be hyphenated.
	/// </summary>
	public HyphenateLimitLinesProperty SetToColumn()
	{
		Value = CssValues.Column;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>none</c>. No restrictions imposed.
	/// </summary>
	public HyphenateLimitLinesProperty SetToNone()
	{
		Value = CssValues.None;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>page</c>. The last line before page or spread break inside the element should not be hyphenated.
	/// </summary>
	public HyphenateLimitLinesProperty SetToPage()
	{
		Value = CssValues.Page;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>spread</c>. The last line before any spread break inside the element should not be hyphenated.
	/// </summary>
	public HyphenateLimitLinesProperty SetToSpread()
	{
		Value = CssValues.Spread;
		return this;
	}


}