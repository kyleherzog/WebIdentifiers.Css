// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the TextAlign property.
/// </summary>
public partial class TextAlignProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a text-align CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public TextAlignProperty(string? value = null)
		: base(CssPropertyNames.TextAlign, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>alignment character</c>. 
	/// </summary>
	public TextAlignProperty SetToAlignmentCharacter()
	{
		Value = CssValues.AlignmentCharacter;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>center</c>. Inline-level content is centered within the line box.
	/// </summary>
	public TextAlignProperty SetToCenter()
	{
		Value = CssValues.Center;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>end</c>. Inline-level content is aligned to the end edge of the line box.
	/// </summary>
	public TextAlignProperty SetToEnd()
	{
		Value = CssValues.End;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>justify</c>. Text is justified according to the method specified by the text-justify property, in order to exactly fill the line box. Unless otherwise specified by text-align-last, the last line before a forced break or the end of the block is start-aligned.
	/// </summary>
	public TextAlignProperty SetToJustify()
	{
		Value = CssValues.Justify;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>justify-all</c>. Sets both text-align-all and text-align-last to justify, forcing the last line to justify as well.
	/// </summary>
	public TextAlignProperty SetToJustifyAll()
	{
		Value = CssValues.JustifyAll;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>left</c>. Inline-level content is aligned to the line-left edge of the line box. (In vertical writing modes, this can be either the physical top or bottom, depending on writing-mode.) [CSS-WRITING-MODES-4]
	/// </summary>
	public TextAlignProperty SetToLeft()
	{
		Value = CssValues.Left;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>match-parent</c>. This value behaves the same as inherit (computes to its parent’s computed value) except that an inherited value of start or end is interpreted against the parent’s direction value and results in a computed value of either left or right. Computes to start when specified on the root element. When specified on the text-align shorthand, sets both text-align-all and text-align-last to match-parent.
	/// </summary>
	public TextAlignProperty SetToMatchParent()
	{
		Value = CssValues.MatchParent;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>right</c>. Inline-level content is aligned to the line-right edge of the line box. (In vertical writing modes, this can be either the physical top or bottom, depending on writing-mode.) [CSS-WRITING-MODES-4]
	/// </summary>
	public TextAlignProperty SetToRight()
	{
		Value = CssValues.Right;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>start</c>. Inline-level content is aligned to the start edge of the line box.
	/// </summary>
	public TextAlignProperty SetToStart()
	{
		Value = CssValues.Start;
		return this;
	}


}