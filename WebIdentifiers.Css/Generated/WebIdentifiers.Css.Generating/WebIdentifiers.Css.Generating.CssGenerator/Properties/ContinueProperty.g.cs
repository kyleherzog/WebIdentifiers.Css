// <autogenerated/>
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the Continue property.
/// </summary>
public partial class ContinueProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a continue CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public ContinueProperty(string? value = null)
		: base(CssPropertyNames.Continue, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>auto</c>. If the box has more content than can fit, the excess content is handled according to the usual rules.
	/// </summary>
	public ContinueProperty SetToAuto()
	{
		Value = CssValues.Auto;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>discard</c>. The box becomes a fragmentation container that captures region breaks, if it is not already. [CSS-BREAK-3] Content after the first region break is not rendered (see below). (If the box is a multi-column container, any overflow columns are also not rendered.)
	/// </summary>
	public ContinueProperty SetToDiscard()
	{
		Value = CssValues.Discard;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>fragments</c>. content that doesn’t fit causes the element to copy itself and continue laying out. See fragment overflow.
	/// </summary>
	public ContinueProperty SetToFragments()
	{
		Value = CssValues.Fragments;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>overflow</c>. Content that doesn’t fit overflows, according to the overflow property
	/// </summary>
	public ContinueProperty SetToOverflow()
	{
		Value = CssValues.Overflow;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>paginate</c>. Content that doesn’t fit paginates. This creates a paginated view inside the element similar to the way that 'overflow: scroll' creates a scrollable view. See paginated overflow
	/// </summary>
	public ContinueProperty SetToPaginate()
	{
		Value = CssValues.Paginate;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>-webkit-discard</c>. The -webkit-discard value behaves identically to discard, except that it only takes effect if the computed value of the display property on the parent is -webkit-box or -webkit-inline-box and the computed value of the -webkit-box-orient property on the parent is vertical.
	/// </summary>
	public ContinueProperty SetToWebkitDiscard()
	{
		Value = CssValues.WebkitDiscard;
		return this;
	}


}