// <autogenerated/>
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the WhiteSpaceCollapse property.
/// </summary>
public partial class WhiteSpaceCollapseProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a white-space-collapse CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public WhiteSpaceCollapseProperty(string? value = null)
		: base(CssPropertyNames.WhiteSpaceCollapse, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>break-spaces</c>. The behavior is identical to that of preserve, except that: Any sequence of preserved white space or other space separators always takes up space, including at the end of the line. A soft wrap opportunity exists after every preserved white space character and after every other space separator (including between adjacent spaces).
	/// </summary>
	public WhiteSpaceCollapseProperty SetToBreakSpaces()
	{
		Value = CssValues.BreakSpaces;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>collapse</c>. This value directs user agents to collapse sequences of white space into a single character (or in some cases, no character).
	/// </summary>
	public WhiteSpaceCollapseProperty SetToCollapse()
	{
		Value = CssValues.Collapse;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>discard</c>. This value directs user agents to “discard” all white space in the element. Does this preserve line break opportunities or no? Do we need a distinct "hide" value? If it preserves line break opportunities, maybe it should be replaced with a word-space-transform value?
	/// </summary>
	public WhiteSpaceCollapseProperty SetToDiscard()
	{
		Value = CssValues.Discard;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>preserve</c>. This value prevents user agents from collapsing sequences of white space. Segment breaks such as line feeds are preserved as forced line breaks.
	/// </summary>
	public WhiteSpaceCollapseProperty SetToPreserve()
	{
		Value = CssValues.Preserve;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>preserve-breaks</c>. Like collapse, this value collapses consecutive white space characters, but preserves segment breaks in the source as forced line breaks.
	/// </summary>
	public WhiteSpaceCollapseProperty SetToPreserveBreaks()
	{
		Value = CssValues.PreserveBreaks;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>preserve-spaces</c>. This value prevents user agents from collapsing sequences of white space, and converts tabs and segment breaks to spaces. (This value is intended to represent the behavior of xml:space="preserve" in SVG.)
	/// </summary>
	public WhiteSpaceCollapseProperty SetToPreserveSpaces()
	{
		Value = CssValues.PreserveSpaces;
		return this;
	}


}