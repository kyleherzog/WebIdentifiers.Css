// <autogenerated/>
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the Content property.
/// </summary>
public partial class ContentProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a content CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public ContentProperty(string? value = null)
		: base(CssPropertyNames.Content, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>close-quote</c>. These values are replaced by the appropriate string from the quotes property.
	/// </summary>
	public ContentProperty SetToCloseQuote()
	{
		Value = CssValues.CloseQuote;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>no-close-quote</c>. Introduces no content, but increments (decrements) the level of nesting for quotes.
	/// </summary>
	public ContentProperty SetToNoCloseQuote()
	{
		Value = CssValues.NoCloseQuote;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>none</c>. On elements, this inhibits the children of the element from being rendered as children of this element, as if the element was empty. On pseudo-elements it inhibits the creation of the pseudo-element as if it had display: none. In neither case does it prevent any pseudo-elements which have this element or pseudo-element as an originating element from being generated.
	/// </summary>
	public ContentProperty SetToNone()
	{
		Value = CssValues.None;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>no-open-quote</c>. Introduces no content, but increments (decrements) the level of nesting for quotes.
	/// </summary>
	public ContentProperty SetToNoOpenQuote()
	{
		Value = CssValues.NoOpenQuote;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>normal</c>. For an element or page margin box, this computes to contents. For ::before and ::after, this computes to none. For ::marker, ::placeholder, and ::file-selector-button, this computes to itself (normal).
	/// </summary>
	public ContentProperty SetToNormal()
	{
		Value = CssValues.Normal;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>open-quote</c>. These values are replaced by the appropriate string from the quotes property.
	/// </summary>
	public ContentProperty SetToOpenQuote()
	{
		Value = CssValues.OpenQuote;
		return this;
	}


}