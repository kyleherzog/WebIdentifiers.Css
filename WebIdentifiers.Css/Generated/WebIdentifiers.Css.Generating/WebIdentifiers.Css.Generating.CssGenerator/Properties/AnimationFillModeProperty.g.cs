// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the AnimationFillMode property.
/// </summary>
public partial class AnimationFillModeProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a animation-fill-mode CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public AnimationFillModeProperty(string? value = null)
		: base(CssPropertyNames.AnimationFillMode, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>backwards</c>. During the period defined by animation-delay, the animation will apply the property values defined in the keyframe that will start the first iteration of the animation. These are either the values of the from keyframe (when animation-direction is normal or alternate) or those of the to keyframe (when animation-direction is reverse or alternate-reverse).
	/// </summary>
	public AnimationFillModeProperty SetToBackwards()
	{
		Value = CssValues.Backwards;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>both</c>. The effects of both forwards and backwards fill apply.
	/// </summary>
	public AnimationFillModeProperty SetToBoth()
	{
		Value = CssValues.Both;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>forwards</c>. After the animation ends (as determined by its animation-iteration-count), the animation will apply the property values for the time the animation ended. When animation-iteration-count is an integer greater than zero, the values applied will be those for the end of the last completed iteration of the animation (rather than the values for the start of the iteration that would be next). When animation-iteration-count is zero, the values applied will be those that would start the first iteration (just as when animation-fill-mode is backwards).
	/// </summary>
	public AnimationFillModeProperty SetToForwards()
	{
		Value = CssValues.Forwards;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>none</c>. The animation has no effect when it is applied but not executing.
	/// </summary>
	public AnimationFillModeProperty SetToNone()
	{
		Value = CssValues.None;
		return this;
	}


}