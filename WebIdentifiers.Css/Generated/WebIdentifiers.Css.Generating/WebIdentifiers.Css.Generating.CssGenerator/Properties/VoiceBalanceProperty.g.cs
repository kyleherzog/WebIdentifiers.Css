// <autogenerated/>
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the VoiceBalance property.
/// </summary>
public partial class VoiceBalanceProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a voice-balance CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public VoiceBalanceProperty(string? value = null)
		: base(CssPropertyNames.VoiceBalance, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>center</c>. Same as 0.
	/// </summary>
	public VoiceBalanceProperty SetToCenter()
	{
		Value = CssValues.Center;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>left</c>. Same as -100.
	/// </summary>
	public VoiceBalanceProperty SetToLeft()
	{
		Value = CssValues.Left;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>leftwards</c>. Moves the sound to the left by subtracting 20 from the inherited voice-balance value (and by clamping the resulting number to -100).
	/// </summary>
	public VoiceBalanceProperty SetToLeftwards()
	{
		Value = CssValues.Leftwards;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>right</c>. Same as 100.
	/// </summary>
	public VoiceBalanceProperty SetToRight()
	{
		Value = CssValues.Right;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>rightwards</c>. Moves the sound to the right, by adding 20 to the inherited voice-balance value (and by clamping the resulting number to 100).
	/// </summary>
	public VoiceBalanceProperty SetToRightwards()
	{
		Value = CssValues.Rightwards;
		return this;
	}


}