// <autogenerated/>
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the FlexDirection property.
/// </summary>
public partial class FlexDirectionProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a flex-direction CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public FlexDirectionProperty(string? value = null)
		: base(CssPropertyNames.FlexDirection, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>column</c>. The flex container’s main axis has the same orientation as the block axis of the current writing mode. The main-start and main-end directions are equivalent to the block-start and block-end directions, respectively, of the current writing mode.
	/// </summary>
	public FlexDirectionProperty SetToColumn()
	{
		Value = CssValues.Column;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>column-reverse</c>. Same as column, except the main-start and main-end directions are swapped.
	/// </summary>
	public FlexDirectionProperty SetToColumnReverse()
	{
		Value = CssValues.ColumnReverse;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>row</c>. The flex container’s main axis has the same orientation as the inline axis of the current writing mode. The main-start and main-end directions are equivalent to the inline-start and inline-end directions, respectively, of the current writing mode.
	/// </summary>
	public FlexDirectionProperty SetToRow()
	{
		Value = CssValues.Row;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>row-reverse</c>. Same as row, except the main-start and main-end directions are swapped.
	/// </summary>
	public FlexDirectionProperty SetToRowReverse()
	{
		Value = CssValues.RowReverse;
		return this;
	}


}