// <autogenerated/>
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the StrokeAlign property.
/// </summary>
public partial class StrokeAlignProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a stroke-align CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public StrokeAlignProperty(string? value = null)
		: base(CssPropertyNames.StrokeAlign, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>center</c>. The stroke for each subpath is centered on the outline.
	/// </summary>
	public StrokeAlignProperty SetToCenter()
	{
		Value = CssValues.Center;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>inset</c>. The stroke for each subpath lies on the “inside” of the outline (into the fill area). The stroke-linejoin property must be ignored. Why is stroke-linejoin ignored? It’s still needed for interior corners.
	/// </summary>
	public StrokeAlignProperty SetToInset()
	{
		Value = CssValues.Inset;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>outset</c>. The stroke for each subpath lies on the “outside” of the outline (outside the fill area).
	/// </summary>
	public StrokeAlignProperty SetToOutset()
	{
		Value = CssValues.Outset;
		return this;
	}


}