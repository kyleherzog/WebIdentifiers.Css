// <autogenerated/>
#nullable enable
namespace WebIdentifiers.Css.Properties;

/// <summary>
/// Provides a CSS entry for the OverflowWrap property.
/// </summary>
public partial class OverflowWrapProperty : CssPropertyEntry
{
	/// <summary>
	/// Represents a overflow-wrap CSS property entry.
	/// </summary>
	/// <param name="value">An optional value with which to initialize the CSS property entry.</param>
	public OverflowWrapProperty(string? value = null)
		: base(CssPropertyNames.OverflowWrap, value)
	{
	}

	/// <summary>
	/// Sets the value of the property entry to <c>anywhere</c>. An otherwise unbreakable sequence of characters may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line. Shaping characters are still shaped as if the word were not broken, and grapheme clusters must stay together as one unit. No hyphenation character is inserted at the break point. Soft wrap opportunities introduced by anywhere are considered when calculating min-content intrinsic sizes. In the case of word-break: auto-phrase, these additional soft wrap opportunities are only introduced if relaxing the restrictions introduced by word-break: auto-phrase as described in overflow-wrap: normal is insufficient to prevent overflow.
	/// </summary>
	public OverflowWrapProperty SetToAnywhere()
	{
		Value = CssValues.Anywhere;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>break-word</c>. As for anywhere except that soft wrap opportunities introduced by break-word are not considered when calculating min-content intrinsic sizes.
	/// </summary>
	public OverflowWrapProperty SetToBreakWord()
	{
		Value = CssValues.BreakWord;
		return this;
	}


	/// <summary>
	/// Sets the value of the property entry to <c>normal</c>. Lines may break only at allowed break points. However, the restrictions introduced by word-break: keep-all may be relaxed to match word-break: normal if there are no otherwise-acceptable break points in the line. Also, the restrictions introduced by word-break: auto-phrase are relaxed if there are no otherwise-acceptable break points in the line: If suppressing soft wrap opportunities within a particular phrase would cause that phrase to overflow even when placed on an otherwise empty line, the user agent must fall back to the same soft wrap opportunities as normal within that phrase. If that is not enough to prevent overflow, suppression of hyphenation opportunities must also be abandoned within each line that would overflow. As an intermediary measure, user agents may also detect multiple levels of phrases, choosing to shorter ones (possibly down to individual words) when longer ones would lead to overflow. The soft wrap opportunities obtained by relaxing the restrictions introduced by word-break: keep-all and word-break: auto-phrase are not considered when calculating min-content intrinsic sizes.
	/// </summary>
	public OverflowWrapProperty SetToNormal()
	{
		Value = CssValues.Normal;
		return this;
	}


}